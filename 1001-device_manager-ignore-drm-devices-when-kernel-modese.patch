From c2f0a21e21005ecf376779d26badd421c726780a Mon Sep 17 00:00:00 2001
From: Martin Whitaker <freedesktop@martin-whitaker.me.uk>
Date: Sun, 19 Mar 2017 19:11:42 +0000
Subject: [PATCH 1/2] device_manager: ignore drm devices when kernel
 modesetting is disabled.

Some video drivers, such as the older nvidia proprietary drivers, create
drm devices that don't support kernel modesetting. The drm renderer won't
work with such devices. In this case we need to ignore the drm devices
and use the frame buffer devices instead.

This patch uses the presence of 'nokmsboot' or 'nomodeset' on the kernel
command line as an indication that such a driver is being used.

diff -Naur plymouth-0.9.4-20200314/src/libply-splash-core/ply-device-manager.c plymouth-0.9.4-20200314.tpg/src/libply-splash-core/ply-device-manager.c
--- plymouth-0.9.4-20200314/src/libply-splash-core/ply-device-manager.c	2020-03-11 19:23:44.000000000 +0000
+++ plymouth-0.9.4-20200314.tpg/src/libply-splash-core/ply-device-manager.c	2020-03-14 13:36:13.302421229 +0000
@@ -219,6 +219,9 @@
         const char *id_path;
         bool has_drm_device = false;
 
+        if (manager->flags & PLY_DEVICE_MANAGER_FLAGS_KMS_DISABLED)
+                return false;
+
         /* We want to see if the framebuffer is associated with a DRM-capable
          * graphics card, if it is, we'll use the DRM device */
         card_matches = udev_enumerate_new (manager->udev_context);
@@ -276,7 +279,11 @@
 
                 if (subsystem != NULL && strcmp (subsystem, SUBSYSTEM_DRM) == 0) {
                         ply_trace ("found DRM device %s", device_path);
-                        renderer_type = PLY_RENDERER_TYPE_DRM;
+                        if (!(manager->flags & PLY_DEVICE_MANAGER_FLAGS_KMS_DISABLED))
+                                renderer_type = PLY_RENDERER_TYPE_DRM;
+                        else
+                                ply_trace ("ignoring, since kernel modesetting is disabled");
+
                 } else if (strcmp (subsystem, SUBSYSTEM_FRAME_BUFFER) == 0) {
                         ply_trace ("found frame buffer device %s", device_path);
                         if (!fb_device_has_drm_device (manager, device))
@@ -433,11 +440,17 @@
                 return false;
 
         if (strcmp (action, "add") == 0 || strcmp (action, "change") == 0) {
+                const char *preferred_subsystem;
                 const char *subsystem;
 
+                if (manager->flags & PLY_DEVICE_MANAGER_FLAGS_KMS_DISABLED)
+                        preferred_subsystem = SUBSYSTEM_FRAME_BUFFER;
+                else
+                        preferred_subsystem = SUBSYSTEM_DRM;
+
                 subsystem = udev_device_get_subsystem (device);
 
-                if (strcmp (subsystem, SUBSYSTEM_DRM) == 0) {
+                if (strcmp (subsystem, preferred_subsystem) == 0) {
                         if (manager->local_console_managed && manager->local_console_is_text)
                                 ply_trace ("ignoring since we're already using text splash for local console");
                         else
diff -Naur plymouth-0.9.4-20200314/src/libply-splash-core/ply-device-manager.h plymouth-0.9.4-20200314.tpg/src/libply-splash-core/ply-device-manager.h
--- plymouth-0.9.4-20200314/src/libply-splash-core/ply-device-manager.h	2020-03-11 19:23:44.000000000 +0000
+++ plymouth-0.9.4-20200314.tpg/src/libply-splash-core/ply-device-manager.h	2020-03-14 13:33:38.763824234 +0000
@@ -32,7 +32,9 @@
         PLY_DEVICE_MANAGER_FLAGS_NONE = 0,
         PLY_DEVICE_MANAGER_FLAGS_IGNORE_SERIAL_CONSOLES = 1 << 0,
         PLY_DEVICE_MANAGER_FLAGS_IGNORE_UDEV = 1 << 1,
-        PLY_DEVICE_MANAGER_FLAGS_SKIP_RENDERERS = 1 << 2
+        PLY_DEVICE_MANAGER_FLAGS_SKIP_RENDERERS = 1 << 2,
+        PLY_DEVICE_MANAGER_FLAGS_KMS_DISABLED = 1 << 3
+
 } ply_device_manager_flags_t;
 
 typedef struct _ply_device_manager ply_device_manager_t;
diff -Naur plymouth-0.9.4-20200314/src/main.c plymouth-0.9.4-20200314.tpg/src/main.c
--- plymouth-0.9.4-20200314/src/main.c	2020-03-11 19:23:44.000000000 +0000
+++ plymouth-0.9.4-20200314.tpg/src/main.c	2020-03-14 13:32:50.743637770 +0000
@@ -2257,6 +2257,10 @@
             (getenv ("DISPLAY") != NULL))
                 device_manager_flags |= PLY_DEVICE_MANAGER_FLAGS_IGNORE_UDEV;
 
+        if (ply_kernel_command_line_has_argument("nokmsboot") ||
+            ply_kernel_command_line_has_argument("nomodeset"))
+                device_manager_flags |= PLY_DEVICE_MANAGER_FLAGS_KMS_DISABLED;
+
         if (!plymouth_should_show_default_splash (&state)) {
                 /* don't bother listening for udev events or setting up a graphical renderer
                  * if we're forcing details */
