From a9e9165222f2ba1b8ee519706070d5e587f4bc37 Mon Sep 17 00:00:00 2001
From: Ray Strode <rstrode@redhat.com>
Date: Wed, 22 Oct 2014 11:27:31 -0400
Subject: [PATCH 118/119] main: fix up mode confusion

plymouthd runs in a particular mode "boot" "shutdown" "updates" at any
given time.  Likewise, the plymouth splash object also takes a mode.
These modes map 1-to-1 with each other, and there is more than one place
in the code where we need to get the splash mode from the overall mode.

This commit adds a helper function to perform this translation, and
cleans up the places where the wrong mode type is used or the
translation performed is incomplete.
---
 src/main.c | 41 +++++++++++++++++++++++++++++++++--------
 1 file changed, 33 insertions(+), 8 deletions(-)

diff --git a/src/main.c b/src/main.c
index d78ee13..101125b 100644
--- a/src/main.c
+++ b/src/main.c
@@ -168,6 +168,30 @@ static void on_quit (state_t       *state,
                      ply_trigger_t *quit_trigger);
 static bool sh_is_init (state_t *state);
 
+static ply_boot_splash_mode_t
+get_splash_mode_from_mode (ply_mode_t mode)
+{
+  ply_boot_splash_mode_t splash_mode;
+  switch (mode) {
+      case PLY_MODE_BOOT:
+          splash_mode = PLY_BOOT_SPLASH_MODE_BOOT_UP;
+          break;
+      case PLY_MODE_SHUTDOWN:
+          splash_mode = PLY_BOOT_SPLASH_MODE_SHUTDOWN;
+          break;
+      case PLY_MODE_UPDATES:
+          splash_mode = PLY_BOOT_SPLASH_MODE_UPDATES;
+          break;
+      default:
+          splash_mode = PLY_BOOT_SPLASH_MODE_INVALID;
+          break;
+  }
+
+  assert (splash_mode != PLY_BOOT_SPLASH_MODE_INVALID);
+
+  return splash_mode;
+}
+
 static void
 on_session_output (state_t    *state,
                    const char *output,
@@ -201,6 +225,8 @@ static void
 on_change_mode (state_t    *state,
                 const char *mode)
 {
+        ply_boot_splash_mode_t splash_mode;
+
         if (state->boot_splash == NULL) {
                 ply_trace ("no splash set");
                 return;
@@ -208,15 +234,17 @@ on_change_mode (state_t    *state,
 
         ply_trace ("updating mode to '%s'", mode);
         if (strcmp (mode, "boot-up") == 0)
-                state->mode = PLY_BOOT_SPLASH_MODE_BOOT_UP;
+                state->mode = PLY_MODE_BOOT;
         else if (strcmp (mode, "shutdown") == 0)
-                state->mode = PLY_BOOT_SPLASH_MODE_SHUTDOWN;
+                state->mode = PLY_MODE_SHUTDOWN;
         else if (strcmp (mode, "updates") == 0)
-                state->mode = PLY_BOOT_SPLASH_MODE_UPDATES;
+                state->mode = PLY_MODE_UPDATES;
         else
                 return;
 
-        if (!ply_boot_splash_show (state->boot_splash, state->mode)) {
+        splash_mode = get_splash_mode_from_mode (state->mode);
+
+        if (!ply_boot_splash_show (state->boot_splash, splash_mode)) {
                 ply_trace ("failed to update splash");
                 return;
         }
@@ -1598,10 +1626,7 @@ show_theme (state_t    *state,
         attach_splash_to_seats (state, splash);
         ply_device_manager_activate_renderers (state->device_manager);
 
-        if (state->mode == PLY_MODE_SHUTDOWN)
-                splash_mode = PLY_BOOT_SPLASH_MODE_SHUTDOWN;
-        else
-                splash_mode = PLY_BOOT_SPLASH_MODE_BOOT_UP;
+        splash_mode = get_splash_mode_from_mode (state->mode);
 
         if (!ply_boot_splash_show (splash, splash_mode)) {
                 ply_save_errno ();
-- 
1.9.0

